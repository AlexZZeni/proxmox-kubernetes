---
- name: Get architecture
  shell:
    cmd: dpkg --print-architecture
  register: os_architecture

- name: Get OS release
  shell:
    cmd: . /etc/os-release && echo "$VERSION_CODENAME"
  register: os_release

- name: Get OS Type
  shell:
    cmd: . /etc/os-release && echo "$ID"
  register: os_type

- name: Uninstall Docker old versions
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
  notify:
    - Refresh APT cache

- name: Install Docker dependencies
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

- name: Add Docker official GPG key
  apt_key:
    url: https://download.docker.com/linux/{{ os_type.stdout }}/gpg

- name: Set up Docker APT repository
  apt_repository:
    repo: deb [arch={{ os_architecture.stdout }}] https://download.docker.com/linux/{{ os_type.stdout }} {{ os_release.stdout }} stable

- name: Install Docker engine
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io

- name: Check Docker systemd directory
  stat:
   path: /etc/systemd/system/docker.service.d
  register: runtime_docker_systemd

- name: Create Docker systemd directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
  when: runtime_docker_systemd.stat.exists == false

- name: Set up Docker daemon
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
  notify: Restart Docker

- name: Flush handlers
  meta: flush_handlers
